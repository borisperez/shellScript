##################################################################################
#                                                                                #
#                               ROTATE CATALINA LOG                              #
#                                                                                #
##################################################################################
#       Boris V. Perez
#---------------------------------------------------------------------------------
#  @(#)  Script: ENDC_Rotate_Catalina_Log.sh                              Vrs: 1.0
#---------------------------------------------------------------------------------
#  Description : Script to rotate the catalina log, creating a zip backup of the
#                current Tomcat catalina log and clean it up. It split the catalina
#                log in case it is bigger than 500MB
#---------------------------------------------------------------------------------


splitCatalinaLog(){
file_size_mb=`ls -l --block-size=M  ${log_dir}/${catalina_log}_${v_data}.log | cut -d " " -f 5 | tr -d "M"`
if [ $file_size_mb -ge 500 ]; then
   echo "File is bigger than 500MB, spliting the "${log_dir}/${catalina_log}_${v_data}.log
   split -b 500MB ${log_dir}/${catalina_log}_${v_data}.log ${log_dir}/${catalina_log}_${v_data}.log_
   if [ $? == 0 ]; then
          catalinalog_parts=`ls -l ${log_dir}/${catalina_log}_${v_data}.log_*| wc -l`
          printMessage 0 "Catalina log was splited in  :"$catalinalog_parts" files parts"
          rm -f ${log_dir}/${catalina_log}_${v_data}.log
        else
                  printMessage 97 "Error to split the catalina log"$log_dir"/"$catalina_log"_"$v_data".log"
          exit 97
        fi
fi
}

printMessage() {
if [  $1 == 1 ]
then
        tput setaf 3
        echo -n `basename $0` $v_data": Warn : "$2 ; echo -e "\n"
        tput sgr0
                echo -n `basename $0` $v_data": Warn : "$2 >> $log_file_name
                echo -e "\n" >> $log_file_name
elif [  $1 == 0 ]
then
        tput bold
        echo -n `basename $0` $v_data": Info : "$2 ; echo -e "\n"
        tput sgr0
                echo -n `basename $0` $v_data": Info : "$2 >> $log_file_name
                echo -e "\n" >> $log_file_name
else
                tput setaf 1
        echo -n `basename $0` $v_data": Error : "$2 ; echo -e "\n"
        tput sgr0
                echo -n `basename $0` $v_data": Error : "$2 >> $log_file_name
                echo -e "\n" >> $log_file_name
fi
}

main() {
error=0

if [ -f ${log_dir}/${catalina_log}_${v_data}.log ]
then
   exit 0
fi

cp ${catalina_log_dir}/${catalina_log} ${log_dir}/${catalina_log}_${v_data}.log
if [ $? == 0 ]; then
    printMessage 0 "Catalina log copied :"$catalina_log_dir"/"$catalina_log" to "$log_dir"/"$catalina_log"_"$v_data".log"
    truncate -s 0 ${catalina_log_dir}/${catalina_log}
    if [ $? == 0 ]; then
                    catalina_size=`ls -l $catalina_log_dir"/"$catalina_log`
                    printMessage 0 "Catalina log was truncated  !"
                splitCatalinaLog
    else
                error=$((error+1))
                printMessage 99 "Error to truncate Catalina log :"$catalina_log_dir"/"$catalina_log
                exit 99
    fi
else
error=$((error+1))
printMessage 98  "Error to copy Catalina log :"$catalina_log_dir"/"$catalina_log
exit 98
fi

}

export v_data=`date +"%Y.%m.%d.%H"`
export log_dir=/apps/talend/logs
export catalina_log=catalina.out
export catalina_log_dir=/apps/TDC/TalendDataCatalog/data/logs/tomcat
export catalina_log_backup=${catalina_log}_${v_data}.log
export log_file_name=$log_dir/ENDC_ROTATE_CATALINA_LOG_$v_data.log


main
